@include "base.fgd"

@PointClass base(Targetname, EnableDisable) = stb_spawn_settings :
"Point entity containing settings for the map"
[
  startingArmor(integer) : "Starting Armor": 0 : "Amount of armor a player first spawns in with"
  respawnArmor(integer) : "Respawn Armor": 0 : "Amount of armor a player gets on respawn"
  startingHealth(integer) : "Starting Health": 100 : "Amount of health a player first spawns in with"
  respawnHealth(integer) : "Respawn Health": 100 : "Amount of health a player respawns in with"
  maxHealth(integer) : "Max Health": 100 : "Max health a player can have"
  solidPlayer(choices) : "Player is solid" : 0 : "Can players collide with one another?" =
  [
    0: "False"
    1: "True"
  ]
  canWalk(choices) : "Players can walk" : 1 : "Can players move themselves?" =
  [
    0: "False"
    1: "True"
  ]
  canSprint(choices) : "Players can sprint" : 1 : "Can players sprint?" =
  [
    0: "False"
    1: "True"
  ]
  canZoom(choices) : "Players can zoom" : 1 : "Can players use the zoom?" =
  [
    0: "False"
    1: "True"
  ]
  plyModel(studio) : "Player Model" : "" : "Player model to use"
  jumpPower(integer) : "Jump Power": 160 : "Player jump height"
  runSpeed(integer) : "Sprint speed": 400 : "Players sprint speed"
  walkSpeed(integer) : "Walk speed": 200 : "Players walk speed"
  flashlightAllowed(choices) : "Players can use flashlight" : 1 : "Can players use the flashlight?" =
  [
    0: "False"
    1: "True"
  ]
  // Inputs
  input Apply(void) : "Applies settings"
]

@PointClass base(Targetname) = stb_hudmessage :
"Prints message in player chat"
[
  input PrintMessage(string) : "Prints the message in chat"
]

@PointClass base(Targetname) = stb_player_color :
"Changes the activators color"
[
  Color(color1) : "Color" : "1, 0, 0" : "Color to make a player"
  // Inputs
  input SetPlayerColor(void) : "Sets the activators render color"
  input SetAllPlayerColor(void) : "Sets the render color of ALL players."
]

@PointClass base(Targetname) = stb_entity_glow :
"Makes entities glow"
[
  Entity1(target_destination) : "Entity1" : "" : "Entity to make glow"
  Entity2(target_destination) : "Entity2" : "" : "Entity to make glow"
  Entity3(target_destination) : "Entity3" : "" : "Entity to make glow"
  Entity4(target_destination) : "Entity4" : "" : "Entity to make glow"
  glowcolor(Color1) : "Glow Color (R G B)" : "255, 255, 255" : "Color to glow"
  BlurX(integer) : "BlurX" : 2 : "The strength of the halo's blur on the x axis."
  BlurY(integer) : "BlurY" : 2 : "The strength of the halo's blur on the y axis."
  IgnoreZ(choices): "Render through everything?" : 0 : "Render through walls, other props, etc" =
  [
    0: "No"
    1: "Yes"
  ]
  // Inputs
  input TurnOn(void) : "Turns the glowing on"
  input TurnOff(void) : "Turns the glowing off"
]

@PointClass base(Targetname) = stb_breakable_door :
"Makes entities glow"
[
  Door(target_destination) : "Door" : "" : "The Door to monitor"
  Health(integer) : "Health" : 100 : "Max health of the door"
]